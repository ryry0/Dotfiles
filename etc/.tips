zsh: Mount tmpfs: mount -t tmpfs -o size=20m tmpfs /mnt/tmp
zsh: pactree to view dependency tree
zsh: pactree -r to view reverse dependency tree
zsh: pacman -Qdt to view orphaned packages
zsh: Use sudoedit instead of sudo vi
zsh: mplayer in cli mode: mplayer -vo fbdev2 -zoom -dr
zsh: mplayer in cli mode fullscreen: setterm -cursor off && mplayer -vo fbdev2 -zoom -dr -x 1366 -u 768 -fs &> /dev/null
zsh: remote desktop: rdesktop 192.168.1.117 -u Ryan -p - -g 1600x1200 -x l -a 32 -K -z -r sound:remote
zsh: !* gives you all the arguments of the last command.
zsh: git remote set-url --add --push origin <alternate origin>
zsh: use bracket expansion: mv a a.bak -> mv a{,.bak}
zsh: pipe to xargs -n 1 to use each argument once -P to parallelize
zsh: nixos-rebuild switch --upgrade to rebuild nixos
zsh: nix-env --delete-generations old
zsh: nix-collect-garbage -d : run as root
zsh: nix-store --gc
zsh: dstat, strace (opensnoop), netcat, netstat, ngrep, tcpdump, perf, ftrace
zsh: for i in $(ls); do foo; done
zsh: until [ ]; do foo; done
zsh: git stash save "label here"

vim: Use ranges e.g. 90t. (copy line 90 to here).
vim: zc/zo folding commands
vim: * search
vim: % goes to next parenthesis
vim: copy previous line with foo here ?foo?[.]["]
vim: copy following line with foo here /foo/[.]["]
vim: Use paragraph objects
vim: holy-grail
vim: zt/b, move line at cursor to top/bottom of screen
vim: use :normal command to apply a command to multiple lines
vim: use :g/pattern/normal to apply a normal command to any line matching pattern
vim: use C-r / in command line to paste last search
vim: "0p pastes last yanked text
vim: "1p pastes last deleted text
vim: use gn to go to visual mode and select next match
vim: :w !sudo tee % to save file you forgot to sudo on.
vim: :.! dot before ! executes shell command and overwrites line. r adds new line
vim: :find to quickly find and open a file
vim: Use :normal commands with dot or @q to operate on ranges
vim: qqmovement.q num@q
vim: Norm strike abort when motion fails with macros
vim: :[range]!{filter} - e.g. sort
vim: :argdo and bufdo windo
vim: mm `m/global marks
vim: You can swap between visual selection modes without going back to normal mode
vim: Search stuff:
vim:       * \c case sensitive
vim:       * \v very magic
vim:       * \V very nomagic
vim:       * \x{length} hex
vim:       * \a alpha
vim:       * \A non-alpha
vim:       * \w \W word character
vim:       * \d
vim:       * () submatch references with \1...9 prepend with % to stop ignore
vim:       * \_s whitespace/lbr
vim:       * <word> delmiters
vim:       * \zs \ze get subsets of matches
vim: "0 has most recent yank, "1 has most recent delete, ". Last inserted text,
vim: Command/Search:C-r C-w|C-a|/ insert word|WORD under cursor|last search
vim: quick ranges using !{motion}
vim: gq reformats text to correct width
vim: & repeats last substitution command. g& applies it to all lines
vim: qUppercasereg append to macro
vim: %% to open file in same directory as your file
vim: argument list is ws arglocal, buffers are desktop
vim: Insert/command: C-r{register} one shot paste ciw<C-r>"/0
vim: :cw colorized make output
vim: gi to go to last place inserted text
vim: Insert/Command: C-w delete back one word C-u delete back to start of line
vim: Visual: o to swap cursor to other end of visual selection
vim: Use number increment commands with counts. C-a or c-x
vim: Use more iw or aw commands
vim: Insert: C-r= simple math
vim: Insert: C-o insert normal mode
vim: [I to list all lines found in current and included files that contain the word under the cursor
vim: Insert: C-vu{0c23} insert unicode
vim: R is pressing insert key
vim: gv reselects last visual selection
vim: Visual block: $ key goes to end of all lines regardless of length
vim: Run last ex command @:
vim: Ex Command: C-d with tab to auto complete
vim: Ex commands far and wide
vim: gn go to visual mode and select next match
vim: :w ! sudo tee % to save for you forgot to sudo on
vim: :.! Execute shell and overwrite line r adds new line
vim: :read/write reads/writes to from current buffer to shell command
vim: :edit! Reloads file w/o changes
vim: :on close all but active
vim: C-w w/hjkl to cycle windows
vim: C-w rx/HJKL rotate/exchange/move windows
vim: C-w =_| equalise/max h/max w
vim: : lcd set local working directory for a window
vim: C-w T move current window to new tab
vim: :tabmove / gt
vim: :S/explore
vim: ge backward end of previous word
vim: f aim for uncommon
vim: :yank delete put commands
vim: gp/gP paste and move cursor to end of paste
vim: Put a register w/ macro. Edit and place back into same reg
vim: //e move cursor to end of search
vim: :v[global] acts on all lines not matching pattern
vim: :sort command
vim: g/{start}/ .,{finish} [cmd]
vim: use g C-] to navigate multiple matches
vim: use :tag / :tjump as C-] and g C-] with tab completion
vim: make! to not move to first thing in quicklist, cfirst, clast, cprev, cnext, cc , copen , cclose, <cr> in quickfix, :colder, cnewer
vim: :grep thing *
vim: :vim /pattern/[g][j] {file}
vim: autocomplete
vim:       * C-e revert
vim:       * C-n/omni/etc C-p live filtering
vim:       * C-h delete one character from match
vim:       * C-l Add one character from match
vim:       * <C-x><C-n> current buffer keywords
vim:       * C-x C-i included file keywords
vim:       * C-x C-] tags file keywords
vim:       * C-x C-k Dictionary lookup
vim:       * C-x C-l whole line completon
vim:       * C-x C-f filename 
vim:       * C-x C-o omni
vim: :edit $MYVIMRC, :so $MYVIMRC








