#the following fixes the libswmhackso.0.0 cannot be preloaded problem
LD_PRELOAD="/usr/lib/libswmhack.so.0.0"
prompt off 
autoload -U colors && colors
source ~/.ryry.zsh-theme

if [[ -z "$DISPLAY" ]] && [[ $(tty) = /dev/tty1 ]]; then
	exec startx 

elif [[ $(tty) = /dev/tty2 ]] ; then
	tmux 

elif [[ $TERM = "rxvt-unicode-256color" ]] ; then
	exec tmux -2
fi

#path where symbolic links for marks are stored
export MARKPATH=$HOME/.marks

#zsh vim mode 
autoload -U edit-command-line
zle -N edit-command-line
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode
bindkey -M vicmd v edit-command-line
bindkey '^R' history-incremental-search-backward
bindkey '^K' backward-kill-line
bindkey '^Y' yank
bindkey '^N' down-line-or-history
bindkey '^P' up-line-or-history

alias sudo='nocorrect sudo '
alias ls='ls --color=auto -HF'
alias vi='vim'
alias pacman='sudo pacman'
alias cls='clear && ls --color=auto'
alias mpcli='mplayer -vo fbdev2 -zoom -dr'
alias mpclifs='setterm -cursor off && mplayer -vo fbdev2 -zoom -dr -x 1366 -y 768 -fs &>/dev/null'
alias pandora='pianobar'
alias shutdown='sudo shutdown'
alias reboot='sudo reboot'
alias spv='tmux splitw -h '
alias sph='tmux splitw -v '
alias dim='xbacklight -dec 20'
alias bright='xbacklight -inc 20'
alias copy='rsync -aP'
alias rdpalienpc='rdesktop 192.168.1.117 -u Ryan -p - -g 1600x1200 -x l -a 32 -K -z -r sound:remote'
alias dropbox='python2 ~/Dropbox/Programming/Scripts_and_Configurations/scripts/dropbox.py'
alias :q='exit'
alias q='exit'
alias reconnect='systemctl restart netctl-auto@wlp2s0.service'
alias dimmest='sudo xbacklight -set 3'
alias pdf='zathura'
alias brightest='sudo xbacklight -set 100'
alias gchat='freetalk'
alias gmail='links "mail.google.com/mail/?ui=html"'
alias externmonitor='xrandr --auto --output LVDS1 --off'
alias dualmonitor='xrandr --output LVDS1 --auto --output VGA1 --auto --above LVDS1'
alias systemctl='sudo systemctl'
alias moviemode='xset -dpms; xset s off'
alias endmoviemode='xser dpms; xset s on'
alias gdb='gdb -tui -q'
alias pd='popd'
alias fgrep='fgrep --color=always'
alias c='ra'
alias dirs='dirs -v'
alias matlab='matlab -nodesktop -nosplash'
alias sl='ls'
alias jp='jump'
alias mk='mark'
alias umk='unmark'
alias lm='marks'
alias kd='pwd | keep'
alias clc='clear'
alias h='history'

#make aliases
alias remake='make re'
alias makerr='make 2>&1 | less -r'
alias maek='make'
alias mkae='make'
alias meak='make'
alias amka='make'
alias akme='make'
alias amke='make'
alias mkea='make'

#git aliases
alias gch='git checkout'
alias gb='git branch'
alias gs='git status'
alias gl='git log'
alias glo='git log --oneline'
alias gls='git log --pretty=short'
alias gc='git commit'
alias ga='git add'
alias gd='git diff'
alias gp='git push'

#suffix aliases
alias -s tex=vim
alias -s cpp=vim
alias -s conf=vim
alias -s c=vim
alias -s hpp=vim
alias -s h=vim

#cd's to the first found folder that matches the argument
function fcd () {
	FOUND=$(find . -iname "$@" | sed 1q)
	if [[ -d $FOUND ]]; then
		builtin cd $FOUND
	elif [[ -f $FOUND ]]; then
		builtin cd "$(dirname $FOUND)"
	fi
}

function cd () {
	builtin cd "$@" && ls --color=auto
}

#this function cd's to home before running fcd
function hcd () {
	builtin cd ~
	fcd "$@"
}

# Compatible with ranger 1.4.2 through 1.6.*
#
# Automatically change the directory in bash after closing ranger
#
# This is a bash function for .bashrc to automatically change the directory to
# the last visited one after ranger quits.
# To undo the effect of this function, you can type "cd -" to return to the
# original directory.
function ra {
    tempfile='/tmp/chosendir'
    /usr/bin/ranger --choosedir="$tempfile" "${@:-$(pwd)}"
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

#this function stores the output of a command.
function keep () {
	kept=()
	kept=( $~* )
	if [[ ! -t 0 ]]; then
		while read line; do
			kept+=( $line )
		done
	fi
	print -Rc - $kept
}

# mark system courtesy of Jeroen Janssens
function jump {
	cd -P "$MARKPATH/$1" || echo "No such mark: $1"
}

function mark {
#fixed odd link duplication error, by deleting a preexisting link.
	if [ -e "$MARKPATH/$1" ]; then
		rm "$MARKPATH/$1"
	fi
	mkdir -p "$MARKPATH"; ln -s "$(pwd)" "$MARKPATH/$1"
}

function unmark {
	rm -i "$MARKPATH/$1"
}

function marks {
	ls -l "$MARKPATH" | sed 's/  / /g' | cut -d' ' -f9- | sed 's/ -/\t-/g' && echo
}

# mark tab completion
function _completemarks {
	reply=($(ls $MARKPATH))
}

compctl -K _completemarks jump
compctl -K _completemarks unmark

export PATH=/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin:/usr/bin/core_perl
export PATH=/home/ryan/Dropbox/Programming/usr/bin:$PATH
